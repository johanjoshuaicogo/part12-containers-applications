services:
  app:
    image: hello-front-prod
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: Dockerfile
    environment:
      VITE_BACKEND_URL: http://localhost:8080/api/
    container_name: hello-front-prod # This will name the container hello-front-prod
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy1
    depends_on:
      - app # wait for the frontend container to be started
      # - server # wait for the backend container to be started
  # server:
  #   image: hello-back-prod
  #   build:
  #     context: ./todo-backend # The context will pick this directory as the "build context"
  #     dockerfile: Dockerfile # This will simply tell which dockerfile to read
  #   environment:
  #     REDIS_URL: http://redis:6379
  #     MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
  #   container_name: hello-back-prod # This will name the container hello-back-prod
  #   depends_on:
  #     - mongo # wait for the mongo container to be started
  #     - redis # wait for the redis container to be started
  # mongo:
  #   image: mongo
  #   ports:
  #     - 3456:27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #     MONGO_INITDB_DATABASE: the_database
  #   volumes: 
  #     - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
  #     - ./todo-backend/mongo_data:/data/db

  # redis:
  #   image: redis
  #   ports:
  #     - 6379:6379
  #   command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
  #   volumes: # Declare the volume
  #     - ./todo-backend/redis_data:/data